{"version":3,"sources":["next-parse-request-args.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"next-parse-request-args.js","sourcesContent":["(function () {\n  var global = global || this || window || Function('return this')();\n  var nx = global.nx || require('@feizheng/next-js-core2');\n  var MSG_ERROR = 'The arguments.length should between 1 ~ 4.'\n\n  nx.parseRequestArgs = function (inArguments, inIsArray) {\n    var args = nx.slice(inArguments);\n    var length = args.length;\n    var options = null;\n\n    switch (length) {\n      case 1:\n        options = args[0];\n        break;\n      case 2:\n        options = nx.mix({ url: args[0] }, args[1]);\n        break;\n      case 3:\n        options = nx.mix({ url: args[0], method: args[1] }, args[2]);\n        break;\n      case 4:\n        options = { url: args[0], method: args[1], data: args[2], options: args[3] };\n        break;\n      default:\n        options = null;\n        nx.error(MSG_ERROR)\n    }\n\n    return !inIsArray ? options : [\n      options.url,\n      options.method,\n      options.data,\n      options.options\n    ];\n  };\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = nx.parseRequestArgs;\n  }\n})();\n"]}